plugins {
    id 'java'
    id 'checkstyle'
    id 'org.springframework.boot' version "$springBootVersion"
    id 'io.spring.dependency-management' version "$springDependencyManagementVersion"
    id 'jacoco'
    id 'org.barfuin.gradle.jacocolog' version "$jacocoLogVersion"
}

group = 'com.example.deposit'
version = '1.0.0'

sourceSets.main.java.srcDirs = ['build/generated-source/src/main/java', 'src/main/java']

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}


dependencies {
    implementation project(':api')

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation "org.postgresql:postgresql:$postgresqlDriverVersion"
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation "org.apache.camel.springboot:camel-spring-boot-starter:$camelSpringStarterVersion"
    implementation "org.apache.camel.springboot:camel-kafka-starter:$camelKafkaStarterVersion"
    implementation 'org.liquibase:liquibase-core'

    // https://stackoverflow.com/questions/53326271
    implementation 'com.google.code.findbugs:jsr305:3.0.2'

    compileOnly 'org.projectlombok:lombok'
    testImplementation 'org.projectlombok:lombok'
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation platform("io.qameta.allure:allure-bom:$allureVersion")
    testImplementation "io.qameta.allure:allure-junit5"
}

tasks.named('test') {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

checkstyle {
    configFile = file("${rootDir}/config/checkstyle/checkstyle.xml")
    ignoreFailures = false
    maxWarnings = 0
    maxErrors = 0
}
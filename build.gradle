plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.5'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'com.sngular.scs-multiapi-gradle-plugin' version '4.9.12'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

sourceSets.main.java.srcDirs = ['build/generated-source/', 'src/main/java']

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.postgresql:postgresql:42.7.3'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.apache.camel.springboot:camel-spring-boot-starter:4.5.0'
	implementation 'org.apache.camel.springboot:camel-kafka-starter:4.1.0'
	implementation 'org.liquibase:liquibase-core'
	implementation 'org.springframework.kafka:spring-kafka'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'io.micrometer:micrometer-registry-prometheus'
	annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
}

tasks.named('test') {
	useJUnitPlatform()
}

asyncapimodel {
	specFile {
		{
			filePath = './src/main/resources/api/api.yml'
			consumer {
				apiPackage = 'com.sngular.apigenerator.asyncapi.business_model.model.event.consumer'
				modelPackage = 'com.sngular.apigenerator.asyncapi.business_model.model.event'
			}
			supplier {
				apiPackage = 'com.sngular.apigenerator.asyncapi.business_model.model.event.producer'
				modelPackage = 'com.sngular.apigenerator.asyncapi.business_model.model.event'
			}
		}
		springBootVersion = 3
		overWriteModel = true
	}
}



